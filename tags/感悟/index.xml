<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>感悟 on 混沌的云</title>
    <link>http://localhost:1313/tags/%E6%84%9F%E6%82%9F/</link>
    <description>Recent content in 感悟 on 混沌的云</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    
    
    <lastBuildDate>Wed, 20 Aug 2014 20:50:18 CST</lastBuildDate>
    <atom:link href="http://localhost:1313/tags/%E6%84%9F%E6%82%9F/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>最重要的事情</title>
      <link>http://localhost:1313/post/most-important-things/</link>
      <pubDate>Wed, 20 Aug 2014 20:50:18 CST</pubDate>
      
      <guid>http://localhost:1313/post/most-important-things/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;重要的事情从一开始就只有一个，那就是做好当下的角色。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;从全栈这个词汇出现到现在，讨论就没有停止过。目前基本年纪大一点的『过来人』不少觉得专注才能做好技术，全栈就是瞎玩或者就是全平庸。而年轻一点的抑或一些创业同学们，更多觉得全栈是现在创业风气下催化出来的一个必然的趋势，值得提倡等等。&lt;/p&gt;

&lt;p&gt;对于我来说，我是支持做移动 App 方面的同学全栈的。毕竟，移动的技术很广，但是如果你只是做应用做产品，大部分的时候你并不需要深入到多深的层次。更多的时候，对于整个产品的每个环境的掌控和理解，对于你的产品的质量到是有更大的帮助。&lt;/p&gt;

&lt;p&gt;过去甚至现在的大部分团队，分工的方式还是根据技术方向来分。这样自然是合理的，可以让每一个人都做好自己擅长的工作。但是是否可以考虑一下，有没有必要换一个方向去拆分工作。&lt;/p&gt;

&lt;p&gt;从功能来分。&lt;/p&gt;

&lt;p&gt;比如说，你是做升级流程的，假如你同时会服务端和客户端开发。那么服务器怎么控制 App 版本，客户端怎么处理 App 解析都由你来研发。那么减少了的沟通成本，是不是可以带来产品质量和开发效率的提升呢？这点值得思考。&lt;/p&gt;

&lt;p&gt;由于现在这样操作的团队并不多，跟多的是一些个人开发者。但是个人开发者又有一些不同的地方，那就是个人开发者不仅仅要在技术上全栈，还需要考虑商务，推广，运营等等许多事情，精力难免分散。&lt;/p&gt;

&lt;p&gt;提到精力，不得不提一下另外一个观点。有的同学认为，学多项技术会导致精力上顾不过来，最后一事无成。这个观点不全错，但是举个简单的例子，据我所知 BAT 对高级别工程师的要求中或多或少的提到了『在多个领域有出色的能力，对多方向的技术有所了解』这类的要求（当然，也可以是某个领域有突出能力，本来人就是多样化的）。&lt;/p&gt;

&lt;p&gt;所以，如果有调剂有兴趣，可以去尝试一下同团队其他同学的方向，或许你做不到和他们一样专业，但是如果能比较好的掌握每个方向的一些知识，对你专注的方向也会有意想不到的提高。&lt;/p&gt;

&lt;p&gt;当然，如果你在一个初创的团队，如果你是技术负责人，你的角色要求就是需要全栈。又或者说，你希望成为移动 App 方面的专家而不得不变全栈。那么请不要担心你会迷失，也不用羡慕边上一些大神已经开始张口闭口高深技术词汇，做好当下的角色，你还是可以成为独一无二的自己。&lt;/p&gt;

&lt;p&gt;谨以此文勉励自己，无论走什么方向，关键是不要迷失。&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>